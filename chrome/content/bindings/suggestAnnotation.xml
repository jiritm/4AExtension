<?xml version="1.0"?>

<!DOCTYPE overlay SYSTEM "chrome://annotationextension/locale/annotationExtension.dtd">

<bindings xmlns="http://www.mozilla.org/xbl"
  xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">
  <binding id="aeSuggestPanel">
    
    <content>
      <xul:vbox flex="1">
        <!-- VYBRANY TEXT -->
        <xul:vbox class="aeSuggestAnnotationSelectionBox" flex="1">
          <xul:label value="&annotationextension.aeSelectedText.selectedText.label;"
              tooltiptext="&annotationextension.annotationWindow.selectedText.tooltip;"/>
          <xul:hbox class="aeSuggestAnnotationSelectionBoxForDocument" pack="center" align="center" flex="1">
            <xul:deck selectedIndex="1" flex="1">
              <xul:textbox
                tooltiptext="&annotationextension.annotationWindow.selectedText.tooltip;"
                multiline="true" rows="2" readonly="true" flex="1"/>
              <xul:hbox flex="1" pack="center" align="center">
                <xul:label value="&annotationextension.suggestAnnotation.selection.document;"/>
              </xul:hbox>
            </xul:deck>
          </xul:hbox>
        </xul:vbox>
        <!-- TYP -->
        <xul:vbox class="aeSuggestAnnotationTypeBox" flex="1">
          <xul:label value="&annotationextension.aeTypeSelect.typeAnnotation.label;"
            tooltiptext="&annotationextension.annotationWindow.selectedType.tooltip;"/>
          <xul:hbox align="center">
            <xul:hbox flex="1">
              <xul:textbox rows="1" flex="1"
                class="textboxForType"
                value="&annotationextension.suggestAnnotation.type.all;"
                annotationExtensionAllTypes="&annotationextension.suggestAnnotation.type.all;"
                height="25px"
                onpaste="return(false);"/>              
            </xul:hbox>
            <xul:button
              label="&annotationextension.choose.button.label;"
              tooltiptext="&annotationextension.annotationWindow.choose.tooltip;"
              oncommand="document.getBindingParent(this).openTypesWindow();"/>
            <xul:button
              label="&annotationextension.suggestAnnotation.type.all;"
              tooltiptext="&annotationextension.suggestAnnotation.type.all.tooltip;"
              oncommand="document.getBindingParent(this).setAllTypes();"/>
          </xul:hbox>
        </xul:vbox>
      </xul:vbox>
    </content>
    
    <implementation>
      
      <constructor>
        this.setAttribute('isDocumentSelected', 'true');
        this.setAttribute('typeURI', 'null');
      </constructor>
      
      <property name="typeURI"
        onget="return this.getAttribute('typeURI');"
        onset="this.setAttribute('typeURI', val);">
      </property>
      
      <property name="isDocumentSelected"
          onget="return this.getAttribute('isDocumentSelected');"
          onset="this.setAttribute('isDocumentSelected', val);">
      </property>
      
      <method name="annotateDocument">
        <parameter name="adbool"/>
        <body>
          var main = document.getAnonymousNodes(this)[0];
          var selectionBox = main.childNodes[1];
          var selectionBoxInner = selectionBox.childNodes[1];
          var deck = selectionBoxInner.childNodes[0];
          
          if (adbool == 'true')
          {
            this.setAttribute('isDocumentSelected', 'true');
            deck.selectedIndex = 1;
            selectionBoxInner.className = "aeSuggestAnnotationSelectionBoxForDocument";
          }
          else
          {
            this.setAttribute('isDocumentSelected', 'false');
            deck.selectedIndex = 0;
            selectionBoxInner.className = "";
          }
        </body>
      </method>
      <method name="openTypesWindow">
        <body>
          var params = {out:null};
          openDialog("chrome://annotationextension/content/annotCreation/typesWindow.xul", "annotationextension:typesWindow", "resizable,chrome,centerscreen,modal,height=400,width=600", params);
          if (params.out)
          {
            var main = document.getAnonymousNodes(this)[0];
            var typeBox = main.childNodes[3];
            var typeInnerBox = typeBox.childNodes[1];
            var typeTextboxBox = typeInnerBox.childNodes[0];
            var typeTextbox = typeTextboxBox.childNodes[0];
            
            typeTextbox.value = params.out.typeName;
            this.setAttribute('typeURI', params.out.typeURI);
          }
        </body>
      </method>
      <method name="setText">
        <parameter name="text"/>
        <body>
          if (text.length > 0)
            this.annotateDocument('false');
          else
            this.annotateDocument('true');
            
          var main = document.getAnonymousNodes(this)[0];
          var selectionBox = main.childNodes[1];
          var selectionBoxInner = selectionBox.childNodes[1];
          var deck = selectionBoxInner.childNodes[0];
          var textbox = deck.childNodes[0];
          
          textbox.value = text;          
        </body>
      </method>
      <method name="setAllTypes">
        <body>
          this.setAttribute('typeURI', 'null');
          
          var main = document.getAnonymousNodes(this)[0];
          var typeBox = main.childNodes[3];
          var typeInnerBox = typeBox.childNodes[1];
          var typeTextboxBox = typeInnerBox.childNodes[0];
          var typeTextbox = typeTextboxBox.childNodes[0];
            
          typeTextbox.value = typeTextbox.getAttribute('annotationExtensionAllTypes');
        </body>
      </method>
      
    </implementation>
    
  </binding>
</bindings>