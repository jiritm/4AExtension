<?xml version="1.0"?>

<!DOCTYPE overlay SYSTEM "chrome://annotationextension/locale/annotationExtension.dtd">

<bindings xmlns="http://www.mozilla.org/xbl"
  xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">
  
  <binding id="aeSuggestPanel">
    
    <resources>
      <stylesheet src="chrome://annotationextension/skin/suggestAnnotation.css"/>
    </resources>
    
    <content>
      <xul:vbox flex="1">
        <!-- VYBRANY TEXT -->
        <xul:vbox anonid="aeSuggestAnnotationSelectionBox" flex="1">
          <xul:label value="&annotationextension.aeSelectedText.selectedText.label;"
              tooltiptext="&annotationextension.annotationWindow.selectedText.tooltip;"/>
          <xul:hbox anonid="selectedText-box"
            class="aeSuggestAnnotationSelectionBoxForDocument" pack="center" align="center" flex="1">
            <xul:deck anonid="selectedText-deck"
              selectedIndex="1" flex="1">
              <xul:textbox
                anonid="selectedText-textbox"
                tooltiptext="&annotationextension.annotationWindow.selectedText.tooltip;"
                multiline="true" rows="2" readonly="true" flex="1"/>
              <xul:hbox flex="1" pack="center" align="center">
                <xul:label value="&annotationextension.suggestAnnotation.selection.document;"/>
              </xul:hbox>
            </xul:deck>
          </xul:hbox>
        </xul:vbox>
        <!-- TYP -->
        <xul:vbox anonid="aeSuggestAnnotationTypeBox" flex="1">
          <xul:box id="aeTypeLabel"
            type="aeTypeSelectLabel"/>
          <xul:hbox anonid="selectedType-box"
              align="center">
            <xul:box anonid="selectedType"
              type="aeTypeSelect"
							aeConfirmTextHidden="true"
							aeShowSimple="false"
              annotationExtensionAllTypes="&annotationextension.suggestAnnotation.type.all;"/>
            <xul:box anonid="selectedType-button"
              type="aeTypeSelectButton"/>
            <xul:button
              anonid="aeAllTypesButton"
              label="&annotationextension.suggestAnnotation.type.all;"
              tooltiptext="&annotationextension.suggestAnnotation.type.all.tooltip;"
              oncommand="document.getBindingParent(this).setAllTypes();"/>
          </xul:hbox>
        </xul:vbox>
      </xul:vbox>
    </content>
    
    <implementation>
      
      <constructor>
        <![CDATA[
          this.setAttribute('isDocumentSelected', 'true');
          this.setAttribute('typeURI', 'null');
          
          var typeButton = document.getAnonymousElementByAttribute(this, "anonid", "selectedType-button");
          var typeSelect = document.getAnonymousElementByAttribute(this, "anonid", "selectedType");
          typeButton.aeTypeSelectNode = typeSelect;
          
          typeSelect.aeSetTypeTextbox(typeSelect.getAttribute('annotationExtensionAllTypes'));
          
          typeSelect.aeOnTypeSelect = this.aeTypeSelectHandler;
          typeSelect.aeMainAEChrome = this.aeMainAEChrome;
          typeSelect.aeContext = this;
        ]]>
      </constructor>
      
      <property name="typeURI"
        onget="return this.getAttribute('typeURI');"
        onset="this.setAttribute('typeURI', val);">
      </property>
      
      <property name="aeMainAEChrome"
        onget="return this.mAeMainAEChrome;">
        <setter>
          this.mAeMainAEChrome = val;
          var typeSelect = document.getAnonymousElementByAttribute(this, "anonid", "selectedType");
          typeSelect.aeMainAEChrome = val;
        </setter>
      </property>
      
      <property name="isDocumentSelected"
          onget="return this.getAttribute('isDocumentSelected');"
          onset="this.setAttribute('isDocumentSelected', val);">
      </property>
      
      <method name="annotateDocument">
        <parameter name="adbool"/>
        <body>
          <![CDATA[
            var deck = document.getAnonymousElementByAttribute(this, "anonid", "selectedText-deck");
            var box = document.getAnonymousElementByAttribute(this, "anonid", "selectedText-box");
            
            if (adbool == 'true')
            {
              this.isDocumentSelected = true;
              deck.selectedIndex = 1;
              box.className = "aeSuggestAnnotationSelectionBoxForDocument";
            }
            else
            {
              this.isDocumentSelected = false;
              deck.selectedIndex = 0;
              box.className = "";
            }
          ]]>
        </body>
      </method>

      <method name="setText">
        <parameter name="text"/>
        <body>
          <![CDATA[
            if (text.length > 0)
              this.annotateDocument('false');
            else
              this.annotateDocument('true');
              
            var textbox = document.getAnonymousElementByAttribute(this, "anonid", "selectedText-textbox");
            textbox.value = text;
          ]]>
        </body>
      </method>
      
      <method name="setAllTypes">
        <body>
          <![CDATA[
            var typeSelect = document.getAnonymousElementByAttribute(this, "anonid", "selectedType");
            typeSelect.aeRestore();
            typeSelect.aeSetTypeTextbox(typeSelect.getAttribute('annotationExtensionAllTypes'));
          
            this.typeURI = null;
          ]]>
        </body>
      </method>
      
      <method name="aeTypeSelectHandler">
        <parameter name="typeBox"/>
        <parameter name="thisObj"/>
        <body>
          <![CDATA[
            thisObj.typeURI = typeBox.aeSelectedTypeURI;
          ]]>
        </body>
      </method>
      
    </implementation>
    
  </binding>
</bindings>